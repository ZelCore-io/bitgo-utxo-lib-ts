"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const addressFormat_1 = require("../../../src/addressFormat");
const networks_1 = require("../../../src/networks");
const assert = require("assert");
// Addresses used from https://www.npmjs.com/package/ecashaddrjs
const ecashAddress = 'ecash:qpadrekpz6gjd8w0zfedmtqyld0r2j4qmuthccqd8d', bitcoinCashAddress = 'bitcoincash:qpadrekpz6gjd8w0zfedmtqyld0r2j4qmuj6vnmhp6', outputScriptHex = '76a9147ad1e6c11691269dcf1272ddac04fb5e354aa0df88ac';
describe('ecash address', function () {
    it('decode and encode the address', function () {
        const script = (0, addressFormat_1.toOutputScriptWithFormat)(ecashAddress, 'cashaddr', networks_1.networks.ecash);
        assert.strictEqual(script.toString('hex'), outputScriptHex);
        assert.strictEqual((0, addressFormat_1.fromOutputScriptWithFormat)(script, 'cashaddr', networks_1.networks.ecash), ecashAddress);
        assert.strictEqual((0, addressFormat_1.fromOutputScriptWithFormat)(script, 'cashaddr', networks_1.networks.bitcoincash), bitcoinCashAddress);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWNhc2hhZGRyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdGVzdC9hZGRyZXNzL2VjYXNoL2VjYXNoYWRkci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhEQUFrRztBQUNsRyxvREFBaUQ7QUFDakQsaUNBQWlDO0FBRWpDLGdFQUFnRTtBQUNoRSxNQUFNLFlBQVksR0FBRyxrREFBa0QsRUFDckUsa0JBQWtCLEdBQUcsd0RBQXdELEVBQzdFLGVBQWUsR0FBRyxvREFBb0QsQ0FBQztBQUV6RSxRQUFRLENBQUMsZUFBZSxFQUFFO0lBQ3hCLEVBQUUsQ0FBQywrQkFBK0IsRUFBRTtRQUNsQyxNQUFNLE1BQU0sR0FBRyxJQUFBLHdDQUF3QixFQUFDLFlBQVksRUFBRSxVQUFVLEVBQUUsbUJBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsRixNQUFNLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUUsZUFBZSxDQUFDLENBQUM7UUFDNUQsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFBLDBDQUEwQixFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsbUJBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNqRyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUEsMENBQTBCLEVBQUMsTUFBTSxFQUFFLFVBQVUsRUFBRSxtQkFBUSxDQUFDLFdBQVcsQ0FBQyxFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDL0csQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21PdXRwdXRTY3JpcHRXaXRoRm9ybWF0LCB0b091dHB1dFNjcmlwdFdpdGhGb3JtYXQgfSBmcm9tICcuLi8uLi8uLi9zcmMvYWRkcmVzc0Zvcm1hdCc7XHJcbmltcG9ydCB7IG5ldHdvcmtzIH0gZnJvbSAnLi4vLi4vLi4vc3JjL25ldHdvcmtzJztcclxuaW1wb3J0ICogYXMgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XHJcblxyXG4vLyBBZGRyZXNzZXMgdXNlZCBmcm9tIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2VjYXNoYWRkcmpzXHJcbmNvbnN0IGVjYXNoQWRkcmVzcyA9ICdlY2FzaDpxcGFkcmVrcHo2Z2pkOHcwemZlZG10cXlsZDByMmo0cW11dGhjY3FkOGQnLFxyXG4gIGJpdGNvaW5DYXNoQWRkcmVzcyA9ICdiaXRjb2luY2FzaDpxcGFkcmVrcHo2Z2pkOHcwemZlZG10cXlsZDByMmo0cW11ajZ2bm1ocDYnLFxyXG4gIG91dHB1dFNjcmlwdEhleCA9ICc3NmE5MTQ3YWQxZTZjMTE2OTEyNjlkY2YxMjcyZGRhYzA0ZmI1ZTM1NGFhMGRmODhhYyc7XHJcblxyXG5kZXNjcmliZSgnZWNhc2ggYWRkcmVzcycsIGZ1bmN0aW9uICgpIHtcclxuICBpdCgnZGVjb2RlIGFuZCBlbmNvZGUgdGhlIGFkZHJlc3MnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zdCBzY3JpcHQgPSB0b091dHB1dFNjcmlwdFdpdGhGb3JtYXQoZWNhc2hBZGRyZXNzLCAnY2FzaGFkZHInLCBuZXR3b3Jrcy5lY2FzaCk7XHJcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwoc2NyaXB0LnRvU3RyaW5nKCdoZXgnKSwgb3V0cHV0U2NyaXB0SGV4KTtcclxuICAgIGFzc2VydC5zdHJpY3RFcXVhbChmcm9tT3V0cHV0U2NyaXB0V2l0aEZvcm1hdChzY3JpcHQsICdjYXNoYWRkcicsIG5ldHdvcmtzLmVjYXNoKSwgZWNhc2hBZGRyZXNzKTtcclxuICAgIGFzc2VydC5zdHJpY3RFcXVhbChmcm9tT3V0cHV0U2NyaXB0V2l0aEZvcm1hdChzY3JpcHQsICdjYXNoYWRkcicsIG5ldHdvcmtzLmJpdGNvaW5jYXNoKSwgYml0Y29pbkNhc2hBZGRyZXNzKTtcclxuICB9KTtcclxufSk7XHJcbiJdfQ==